[tool.poetry]
name = "pywhy-stats"
#
# 0.0.0 is standard placeholder for poetry-dynamic-versioning
# any changes to this should not be checked in
#
version = "0.0.0"
description = "Statistical methods for Python"
authors = ["PyWhy Community <adam.li@columbia.edu>, <bloebp@amazon.com>"]
license = "MIT"
documentation = "https://py-why.github.io/pywhy-stats"
repository = "https://github.com/pywhy/pywhy-stats"
readme = "README.md"
classifiers = [
    'Development Status :: 4 - Beta',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
keywords = ['independence testing', 'causal statistics', 'conditional independence']

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vsc = "git"

[tool.poetry-dynamic-versioning.substitution]
files = ["pywhy_stats/__init__.py"]

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
include = ['pywhy_stats*']
exclude = ['*tests', '*testdata']

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
numpy = "^1.23.0"
scipy = "^1.9.0"
scikit-learn = ">= 1.0"

[tool.poetry.group.style]
optional = true
[tool.poetry.group.style.dependencies]
poethepoet = "^0.16.0"
mypy = "^0.971"
black = {extras = ["jupyter"], version = "^22.12.0"}
isort = "^5.12.0"
flake8 = "^5.0.4"
bandit = "^1.7.4"
pydocstyle = "^6.1.1"
codespell = "^2.1.0"
toml = "^0.10.2"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
poethepoet = "^0.16.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
memory_profiler = { version = "^0.60.0" }
flaky = "^3.7.0"
causal-learn = "^0.1.3.1"                     # these packages are only needed for integration testing
bnlearn = "^0.7.12"
dowhy = { version = "^0.8" }
typing-extensions = { version = "*" }         # needed in dowhy's package 
joblib = { version = "^1.1.0" }               # needed in dowhy's package
tqdm = { version = "^4.64.0" }                # needed in dowhy's package
pre-commit = "^3.0.4"

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
poethepoet = "^0.16.0"
portray = "^1.7.0"
matplotlib = { version = "^3.5" }
numpydoc = { version = "^1.4" }
pydata-sphinx-theme = { version = "^0.9.0" }
sphinx = { version = "^5.1.1" }
sphinxcontrib-bibtex = { version = "^2.4.2" }
sphinx-issues = { version = "^3.0.1" }
sphinx-copybutton = { version = "^0.5.0" }
sphinx-gallery = { version = "^0.11.0" }
sphinx_rtd_theme = { version = "^1.0.0" }
graphviz = { version = "^0.20.1" }
ipython = { version = "^8.10.0" }
nbsphinx = { version = "^0.8" }
bnlearn = { version = "^0.7.12" }
dowhy = { version = "^0.8" }
typing-extensions = { version = "*" }         # needed in dowhy's package 
joblib = { version = "^1.1.0" }               # needed in dowhy's package
tqdm = { version = "^4.64.0" }                # needed in dowhy's package

[tool.poe.tasks]
_flake8 = 'flake8'
_bandit = 'bandit -r pywhy_stats'
_black = 'black .'
_isort = 'isort .'
_black_check = 'black --check pywhy_stats examples'
_isort_check = 'isort --check .'
_pydocstyle = 'pydocstyle .'
_codespell = 'codespell pywhy_stats/ doc/ examples/ --ignore-words=.codespellignore --skip "**/_build/*,**/auto_examples/*"'
_changelog = 'semversioner changelog > CHANGELOG.md'
_apply_version = 'semversioner release'

# Note: Shell commands will only work on systems with POSIX, which
# is not necessarily in Windows
_clean_pyc.shell = """find . -name "*.pyc" | xargs rm -f"""
_clean_so.shell = """
find . -name "*.so" | xargs rm -f
find . -name "*.pyd" | xargs rm -f
"""
_clean_cache.shell = """
find . -name "__pycache__" | xargs rm -rf
"""
_clean_build = 'rm -rf _build build dist pywhy_stats.egg-info'
_clean_ctags = 'rm -f tags'
_clean_test = """
rm -rf .pytest_cache .mypy_cache .ipynb_checkpoints
rm junit-results.xml
rm coverage.xml
rm .coverage
rm examples/*.png
rm examples/*.gv
"""

type_check = 'mypy -p pywhy_stats -p tests --config-file pyproject.toml'
unit_test = 'pytest tests/ --cov=pywhy_stats --cov-report=xml --cov-config=pyproject.toml'
integration_test = 'pytest tests/integration_tests'
build_docs = 'make -C doc clean html'
build_docs_noplot = 'make -C doc clean html-noplot'

[[tool.poe.tasks.clean]]
sequence = ['_clean_cache', '_clean_pyc', '_clean_so', '_clean_build', '_clean_ctags', '_clean_test']
ignore_fail = 'return_non_zero'

[[tool.poe.tasks.lint]]
sequence = ['_flake8', '_bandit', '_codespell', '_pydocstyle']
ignore_fail = 'return_non_zero'

[[tool.poe.tasks.format]]
sequence = ['_black', '_isort']
ignore_fail = 'return_non_zero'

[[tool.poe.tasks.format_check]]
sequence = ['_black_check', '_isort_check']
ignore_fail = 'return_non_zero'

#
# a standard verification sequence for use in pull requests
#
[[tool.poe.tasks.verify]]
sequence = ['format', 'lint', 'type_check', 'unit_test']
ignore_fail = "return_non_zero"

[[tool.poe.tasks.release]]
sequence = ['_changelog', '_apply_version']

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
      __pycache__
    | \.github
    | setup.py
    | docs/
)
'''

[tool.pylint]
max-line-length = 120
disable = ["W0511"]

[tool.isort]
profile = 'black'
multi_line_output = 3
line_length = 100
py_version = 38
extend_skip_glob = ['setup.py', 'docs/*', 'examples/*']

[tool.pydocstyle]
convention = 'numpy'
ignore-decorators = '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^pywhy_stats.*'
add_ignore = 'D100,D104,D105,D107'

[tool.mypy]
ignore_missing_imports = true
no_site_packages = true

[tool.pytest.ini_options]
minversion = '6.0'
addopts = '--durations 20 --junit-xml=junit-results.xml --verbose'
filterwarnings = []
log_cli = true
log_cli_level = 'ERROR'

[tool.coverage.run]
branch = true
cover_pylib = false
source = ['pywhy_stats']
omit = ['**/__init__.py', '**/tests/**', '**/testdata/**']

[tool.coverage.report]
exclude_lines = ['pragma: no cover', 'if __name__ == .__main__.:']
precision = 2
